# -*- python -*-
# ex: set filetype=python:

import re

c = BuildmasterConfig = {}

c['title'] = "Freifunk-Falter"
c['titleURL'] = "https://berlin.freifunk.net"
c['buildbotURL'] = "https://buildbot.berlin.freifunk.net/"
c['db_url'] = "sqlite:///state.sqlite"

# Workers
from worker import build_worker, workernames
c['workers'] = build_worker


# targets for snapshots
snapshot_targets = [
    "ath79",
    "ipq40xx",
    "mpc85xx",
    "ramips"
]

# builder-names correspond to openwrt-targets
builder_names = [
    "apm821xx",
    "ar71xx",
    "arc770",
    "archs38",
    "armvirt",
    "at91",
    "ath25",
    "bcm53xx",
    "brcm2708",
    "brcm47xx",
    "brcm63xx",
    "cns3xxx",
    "gemini",
    "imx6",
    "ipq806x",
    "kirkwood",
    "lantiq",
    "layerscape",
    "malta",
    "mediatek",
    "mvebu",
    "mxs",
    "octeon",
    "octeontx",
    "omap",
    "oxnas",
    "pistachio",
    "rb532",
    "samsung",
    "sunxi",
    "tegra",
    "x86",
    "zynq"
    ] + snapshot_targets

# builder-names correspond to branches in falter-packages-repository.
feed_builders = [
    "master",
    "openwrt-19.07",
    "openwrt-21.02",
    "feed_testbranch"
    ]



##################
#   Schedulers   #
##################
from buildbot.schedulers.basic import SingleBranchScheduler
from buildbot.schedulers.forcesched import ForceScheduler
from buildbot.changes import filter
from buildbot.schedulers.timed import Periodic
from buildbot.plugins import schedulers, steps, util

c['schedulers'] = []
"""c['schedulers'].append(
    SingleBranchScheduler(
        name="falter githook",
        change_filter=filter.ChangeFilter(
            branch_re='.*',
            repository='https://github.com/Freifunk-Spalter/builter'
            ),
        treeStableTimer=10,
        builderNames=builder_names
    )
)"""

c['schedulers'].append(SingleBranchScheduler(
        name="build_packagefeed_master",
        change_filter=filter.ChangeFilter(
            branch="master"),
        treeStableTimer=600,
        builderNames=["master"]
    )
)

c['schedulers'].append(SingleBranchScheduler(
        name="build_packagefeed_openwrt1907",
        change_filter=filter.ChangeFilter(
            branch="openwrt-19.07"),
        treeStableTimer=600,
        builderNames=["openwrt-19.07"]
    )
)

c['schedulers'].append(SingleBranchScheduler(
        name="build_packagefeed_openwrt2102",
        change_filter=filter.ChangeFilter(
            branch="openwrt-21.02"),
        treeStableTimer=600,
        builderNames=["openwrt-21.02"]
    )
)

c['schedulers'].append(SingleBranchScheduler(
        name="build_packagefeed_testbranch",
        change_filter=filter.ChangeFilter(
            branch="feed_testbranch"),
        treeStableTimer=300,
        builderNames=["feed_testbranch"]
    )
)

c['schedulers'].append(Periodic(
    name="weekly",
    branch="feature/build_all_packagesets",
    builderNames=builder_names,
    periodicBuildTimer=7*24*60*60
    )
)

c['schedulers'].append(Periodic(
    name="daily_master",
    branch="feature/build_all_packagesets",
    builderNames=builder_names,
    periodicBuildTimer=24*60*60
    )
)

c['schedulers'].append(
	ForceScheduler(
        name="force_building_images",
        builderNames=builder_names
        )
	)

c['schedulers'].append(
    ForceScheduler(
        name="force_building_packagefeed",
        builderNames=feed_builders
        )
    )

# triggerable schedulers for snapshots
c['schedulers'].append(
    schedulers.Triggerable(
        name="trigger_snapshots",
        builderNames=snapshot_targets
    )
)



################
#   BUILDERS   #
################

from buildbot.process.factory import BuildFactory
from buildbot.config import BuilderConfig
from buildbot.steps.source.git import Git
from buildbot.steps.shell import ShellCommand
from buildbot.steps.transfer import DirectoryUpload
from buildbot.steps.master import MasterShellCommand
from buildbot.process.properties import Interpolate, renderer
from buildbot.steps.worker import RemoveDirectory
from datetime import date

# define buildsteps and factories in seperate files
from buildsteps_image import *
from buildsteps_feed import *

c['builders'] = list(map(create_builder_config, builder_names))
c['builders'].extend(list(map(create_feed_builder, feed_builders)))



#####################
#   Web-Interface   #
#####################

c['www'] = dict(
	port=8010,
	plugins=dict(waterfall_view={}, console_view={}, grid_view={}),
	change_hook_dialects={
    'github': {
        'secret': 'c3600bf6160cf2c8536b260111b97a339',
        'strict': True
        }
    }
)

c['protocols'] = { 'pb': { 'port': 9989 } }


# STATUS TARGETS
#from buildbot.status import html
#from buildbot.status.web import authz
#from buildbot.status import words
#from buildbot.status.mail import MailNotifier
#
#c['status'] = []
#c['status'].append(html.WebStatus(
#    http_port=8010,
#    change_hook_dialects={'github': True},
#    authz=authz.Authz(
#        gracefulShutdown=False,
#        forceBuild=True,
#        forceAllBuilds=False,
#        pingBuilder=False,
#        stopBuild=False,
#        stopAllBuilds=False,
#        cancelPendingBuild=False,
#        )
#    )
#    )
#c['status'].append(words.IRC(
#    "irc.freenode.net",
#    "freifunkbuildbot",
#    channels=["#freifunk-berlin"],
#    notify_events={
#        'exception':        1,
#        'successToFailure': 1,
#        'failureToSuccess': 1,
#        }
#    )
#    )
#
#c['status'].append(
#    MailNotifier(
#        fromaddr="buildbot@buildbot.berlin.freifunk.net",
#        mode="change"
#        )
#    )
